<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Selenium – grid</title><link>/tags/grid/</link><description>Recent content in grid on Selenium</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 26 Apr 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/grid/index.xml" rel="self" type="application/rss+xml"/><item><title>Blog: Observability in Selenium 4</title><link>/blog/2021/selenium-4-observability/</link><pubDate>Mon, 26 Apr 2021 00:00:00 +0000</pubDate><guid>/blog/2021/selenium-4-observability/</guid><description>
&lt;p>Diagnosing problems when the Selenium server isn&amp;rsquo;t working has never been easy. With Selenium 4, we have integrated &lt;a href="https://opentelemetry.io/">OpenTelemetry&lt;/a> to help you troubleshoot issues, optimize performance, and provide visibility into the system. By making the Selenium server observable, we are putting more power into your hands.&lt;/p>
&lt;h3 id="need-for-observability">Need for Observability&lt;/h3>
&lt;p>Selenium server enables distributed testing. Instead of running the browsers for tests locally, the tests use a remote browser driver that points to a server. The server makes “&lt;strong>smart&lt;/strong>” decisions to run tests on different remote servers. Every such remote server is capable of hosting different types of browsers and browser versions.&lt;/p>
&lt;p>Selenium 3 uses Hub as the coordinator. It receives new session requests and directs them to the appropriate Node. The Node is the remote end where the browser itself runs.&lt;/p>
&lt;p>Selenium 4 extends this to provide users with a way to set up a full-blown distributed system. Essentially, &lt;a href="https://www.selenium.dev/documentation/en/grid/grid_4/components_of_a_grid/">Selenium 4&lt;/a> splits the Hub into different components with additional enhancements. However, the Node’s role remains the same. To ensure the backward compatibility and simplicity of setting up Grid, standalone and hub-node mode are also available in the new Selenium server.&lt;/p>
&lt;p>Now picture running a full-blown distributed Selenium Grid with hundreds of Nodes with different browsers and browser versions. Testing at scale in such an infrastructure will involve large volumes of requests. How can one keep track of these requests? Enter Selenium Observability!&lt;/p>
&lt;h3 id="how-does-selenium-provide-observability">How Does Selenium Provide Observability?&lt;/h3>
&lt;p>Selenium uses OpenTelemetry to instrument tracing and event logs. Tracing keeps track of a request’s lifecycle. As a request moves through the distributed system, the trace of the request will contain all the information of its crucial operations performed along the way. Such operations are known as spans. A span can record timed logs called events, which ideally encapsulate the current state of the system. These are event logs.&lt;/p>
&lt;p>By default, the Selenium server enables tracing. Selenium server can run in different modes:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.selenium.dev/documentation/en/grid/grid_4/setting_up_your_own_grid/#standalone-mode">Standalone&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.selenium.dev/documentation/en/grid/grid_4/setting_up_your_own_grid/#hub-and-node-mode">Hub and Node&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.selenium.dev/documentation/en/grid/grid_4/setting_up_your_own_grid/#distributed-mode">Fully Distributed&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/SeleniumHQ/docker-selenium#readme">Docker&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Tracing and event logs are available for all the modes. The simplest way to see traces is in the form of console logs. By default, the Selenium server prints logs at the INFO level and above. To pass a logging level of choice while running a Selenium Grid use the &lt;a href="https://www.selenium.dev/documentation/en/grid/grid_4/advanced_features/observability/#visualizing-traces">log-level&lt;/a> flag. Setting the log-level to FINE will display traces and event logs as console logs.&lt;/p>
&lt;p>For a large scale system, consuming traces as logs might not be efficient.
Visualizing and querying traces will quickly help troubleshoot a request failure easily. &lt;a href="https://www.jaegertracing.io/">Jaeger&lt;/a> seamlessly integrates with OpenTelemetry to provide a rich experience of querying, visualizing and collecting request traces.&lt;/p>
&lt;p>Run &lt;code> java -jar selenium-server-&amp;lt;selenium-version&amp;gt;.jar info tracing&lt;/code>.&lt;/p>
&lt;p>It provides detailed and updated instructions to set up Jaeger with the Selenium server.
Visualizing the traces makes it easy to interpret a trace and understand request flow. Now Grid users can effortlessly trace a request, drill down into an error or query them to observe what is happening.&lt;/p>
&lt;figure>
&lt;img src="/images/blog/2021/trace.png"
alt="Trace example"/>
&lt;/figure>
&lt;p>Refer to &lt;a href="https://www.selenium.dev/documentation/en/grid/grid_4/advanced_features/observability/">Selenium Observability&lt;/a> for details.&lt;/p>
&lt;h3 id="full-stack-tracing">Full-Stack Tracing&lt;/h3>
&lt;p>The Java client binding supports tracing. Full-stack tracing allows tracing a request from the client to the server and back. Though the client is a single component, the client trace will contain spans that help build the request. It is easier to locate a client-side problem and fix the test if needed.&lt;/p>
&lt;p>We already saw how the server supports tracing and how to leverage it. For the client-side, add the Opentelemetry dependency to your project setup and add the necessary system properties to export the traces to Jaeger. Refer to &lt;a href="https://www.selenium.dev/documentation/en/remote_webdriver/remote_webdriver_client/#tracing-client-requests">RemoteWebdriver client&lt;/a> for detailed instructions.&lt;/p>
&lt;h3 id="leveraging-traces-and-event-logs">Leveraging Traces and Event Logs&lt;/h3>
&lt;p>The key to fixing a problem lies in knowing the error. For a known error situation, the event logs have you covered. It provides detailed error information and stack traces. Query the collected traces for a time range by the error code to identify the frequency of the error. It will help determine if the error is transient or not and accordingly take action.&lt;/p>
&lt;figure>
&lt;img src="/images/blog/2021/error-event-log.png"
alt="Error event log example"/>
&lt;/figure>
&lt;p>Observe the request latency to identify potential bottlenecks. Each trace will also contain time taken by each span. The issue could be in the underlying infrastructure setup, the network latency, or the code itself. Irrespective of the cause, it is easier to identify the problem area.&lt;/p>
&lt;p>Observability is slowly becoming a must-have property of a system. Selenium is now observable! Go ahead try it out. Let us know if you find anything that requires improvement on our end.&lt;/p></description></item><item><title>Blog: Selenium Grid 1.0.8 Released</title><link>/blog/2010/selenium-grid-1-0-8-released/</link><pubDate>Thu, 10 Jun 2010 00:00:00 +0000</pubDate><guid>/blog/2010/selenium-grid-1-0-8-released/</guid><description>
&lt;p>We’re pleased to announce the release of Selenium Grid 1.0.8. This release fixes multithreaded issues with the Selenium Grid hub that appeared randomly under heavy load. If you’ve ever seen a log message about HttpClient being accessed by multiple threads, you definitely want to upgrade. Even if you haven’t, this release is highly recommended for all.&lt;/p>
&lt;p>You can &lt;a href="http://release.seleniumhq.org/selenium-grid/selenium-grid-1.0.8-bin.zip">download it now&lt;/a> or &lt;a href="http://github.com/nirvdrum/selenium-grid/blob/master/ChangeLog">view the changelog&lt;/a>. The list of changes is:&lt;/p>
&lt;ul>
&lt;li>Multi-threaded issue with access to HttpClient has been resolved, fixing random crashes on a heavily loaded grids&lt;/li>
&lt;/ul>
&lt;p>Many thanks go out to Chris Gulley for identifying and fixing the problem. As always, patches and bug reports are appreciated:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://github.com/nirvdrum/selenium-grid/">Code repository&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://code.google.com/p/selenium/issues/list">Issue tracker&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>I mentioned in the release notes for 1.0.7 that barring any major issues, 1.1 would be the next release. This fix was major enough to warrant an intermediate release. We are still planning to put out 1.1 as the next feature release.&lt;/p>
&lt;p>If you have any questions about Selenium Grid, please use either the user or the developer list, as is most appropriate for the nature of your question. Ongoing discussion about grid development should take place on the developer list.&lt;/p></description></item><item><title>Blog: Selenium Grid 1.0.7 Released</title><link>/blog/2010/selenium-grid-1-0-7-released/</link><pubDate>Tue, 11 May 2010 00:00:00 +0000</pubDate><guid>/blog/2010/selenium-grid-1-0-7-released/</guid><description>
&lt;p>Following up on the Selenium Grid 1.0.6 release, which was mostly a bug fix release, we’re pleased to announce the release of Selenium Grid 1.0.7. This is another bug fix release that focuses primarily on how Selenium Grid handles browser sessions.&lt;/p>
&lt;p>You can &lt;a href="http://release.seleniumhq.org/selenium-grid/selenium-grid-1.0.7-bin.zip">download it now&lt;/a> or &lt;a href="http://github.com/nirvdrum/selenium-grid/blob/master/ChangeLog">view the changelog&lt;/a>. The list of changes are:&lt;/p>
&lt;ul>
&lt;li>Hub now instructs remote controls to shutdown a session if the hub is going to remove it due to being idle for too long&lt;/li>
&lt;li>&lt;a href="http://selenium-grid.seleniumhq.org/configuring-and-tuning.html#changing_maximum_wait_time_for_new_session">Added ability to specify timeout period when waiting for remote controls to become available&lt;/a>. Now the client can timeout gracefully and decide what it would like to do next&lt;/li>
&lt;li>Handle common case of session ID not being found, either because it timed out or was already closed; rather than raising a NullPointerException we now raise a NoSuchSessionException&lt;/li>
&lt;li>Truncate long command response bodies to 128 characters&lt;/li>
&lt;li>Retry remote control checks up to three times before deciding that a remote control is unreliable or unresponsive. This prevents aggressive unregistration of hosts that are busy or suffer from network issues&lt;/li>
&lt;/ul>
&lt;p>As always, patches and bug reports are appreciated:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://github.com/nirvdrum/selenium-grid/">Code repository&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://code.google.com/p/selenium/issues/list">Issue tracker&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Barring any critical issues, the next release of Selenium Grid will be 1.1 and will feature an enhanced Web view as well as a status API. After that, we will be moving from GitHub to Google Code to live alongside the other Selenium projects.&lt;/p>
&lt;p>If you have any questions about Selenium Grid, please use either the user or the developer list, as is most appropriate for the nature of your question. Ongoing discussion about grid development should take place on the developer list.&lt;/p></description></item><item><title>Blog: The Future of Selenium Grid</title><link>/blog/2010/the-future-of-selenium-grid/</link><pubDate>Tue, 27 Apr 2010 00:00:00 +0000</pubDate><guid>/blog/2010/the-future-of-selenium-grid/</guid><description>
&lt;p>As you likely know by now, after years of stewardship Philippe has stepped down as maintainer of Selenium Grid and has named me the &lt;a href="http://ph7spot.com/blog/new-selenium-grid-maintainer">new maintainer.&lt;/a> In this post, I hope to address the most immediate questions about what this means for the future of Selenium Grid.&lt;/p>
&lt;h2 id="background">Background&lt;/h2>
&lt;p>I realize many of you may not know who I am. I’ve been using Selenium in some capacity for close to five years now. I love working on open source software and do so primarily through my membership in the Apache Software Foundation and through &lt;a href="http://github.com/nirvdrum/">my GitHub account&lt;/a>. I hang out on the #selenium channel with the handle “nirvdrum” and have a &lt;a href="http://nirvdrum.com/">personal page&lt;/a> that includes some articles I’ve written and other things I’m involved with. Perhaps more importantly, I also rely on Selenium Grid for &lt;a href="http://mogotest.com/">my latest start-up&lt;/a> so I’m very keen on seeing the project mature and evolve.&lt;/p>
&lt;h2 id="project-resources">Project Resources&lt;/h2>
&lt;p>The new canonical project repository on GitHub is the &lt;a href="http://github.com/nirvdrum/selenium-grid/">nirvdrum fork&lt;/a>. However, within in the next month or so the project will be migrated from git and GitHub to subversion and the &lt;a href="http://code.google.com/p/selenium/">Selenium project on Google Code&lt;/a>. As much as I personally prefer GitHub to Google Code, it makes the most sense from a community perspective for all Selenium projects to be hosted in the same location. The move will be made after Selenium Grid stabilizes a bit more. The &lt;a href="/blog/2010/selenium-grid-1-0-6-released/">1.0.6 release&lt;/a> was the first step in that process, but there may be one or two more minor patch releases. After the move, I’ll try to maintain a synchronized mirror of the code on GitHub so those that prefer to develop patches with git can continue to do so.&lt;/p>
&lt;p>The canonical issue tracker is the &lt;a href="http://code.google.com/p/selenium/issues/list">Selenium issue tracker&lt;/a> on Google Code. We will not be using either JIRA or GitHub Issues. I’ll try to migrate what I can over to the new tracker, but if I miss anything, please re-open the issue over there.&lt;/p>
&lt;h2 id="project-evolution">Project Evolution&lt;/h2>
&lt;p>Selenium Grid currently only works with Selenium 1.x, and consequently the 1.x compatibility interface in Selenium 2. There is currently no support for WebDriver. However, I fully intend to steer the product in that direction, while maintaining support for existing Selenium Grid installations (i.e., based on Selenium 1.x).&lt;/p>
&lt;p>Since the project is moving to Google Code, all of the existing Selenium committers will have the ability to commit to the codebase. This should make the project’s evolution a much more collaborative effort. I’ll kickstart the process and likely lead the development effort, but the role of maintainer will be diminished (in a positive way) by allowing the entire core team equal access to the project.&lt;/p>
&lt;p>Others are welcome to chime as well. Selenium Grid development discussion will be taking place on the Selenium developers list. Please continue to use the Selenium users list for usage and support inquiries.&lt;/p></description></item><item><title>Blog: Selenium Grid 1.0.6 Released</title><link>/blog/2010/selenium-grid-1-0-6-released/</link><pubDate>Tue, 13 Apr 2010 00:00:00 +0000</pubDate><guid>/blog/2010/selenium-grid-1-0-6-released/</guid><description>
&lt;p>Following up on the Selenium Grid 1.0.5 release, which added &lt;a href="http://selenium-grid.seleniumhq.org/self-healing.html">self-healing features&lt;/a> to ease grid management, we’re pleased to announce the release of Selenium Grid 1.0.6. This is a bug fix release for 1.0.5 with some minor new additions.&lt;/p>
&lt;p>You can &lt;a href="http://release.seleniumhq.org/selenium-grid/selenium-grid-1.0.6-bin.zip">download it now&lt;/a> or &lt;a href="http://github.com/nirvdrum/selenium-grid/blob/master/ChangeLog">view the changelog&lt;/a>. The summary of changes are:&lt;/p>
&lt;ul>
&lt;li>Fixed some concurrent modification issues that may have resulted in NullPointerExceptions&lt;/li>
&lt;li>Fixed issue with shutting down workers with Rakefile&lt;/li>
&lt;li>Added PID file support for hub and worker started via Rakefile, making it easier to use a process monitor such as monit&lt;/li>
&lt;/ul>
&lt;p>In case you missed the announcement, Philippe is &lt;a href="http://ph7spot.com/blog/selenium-grid-needs-a-new-maintainer">no longer maintaining&lt;/a> Selenium Grid. We thank him for his years of effort and helping the project get to where it is today. This is my first release as the &lt;a href="http://ph7spot.com/blog/new-selenium-grid-maintainer">new Selenium Grid maintainer&lt;/a>. I will be getting out a new post shortly that lays out the future for the project &lt;em>[UPDATE: The &lt;a href="/blog/2010/the-future-of-selenium-grid/">promised post&lt;/a> is live]&lt;/em>. In the meanwhile, please note the new location of several key resources:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://github.com/nirvdrum/selenium-grid/">Code repository&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://code.google.com/p/selenium/issues/list">Issue tracker&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>If you have any questions about Selenium Grid, please use either the user or the developer list, as is most appropriate for the nature of your question. Ongoing discussion about grid development should take place on the developer list. We look forward to hearing what you think about how we can improve the project.&lt;/p></description></item></channel></rss>